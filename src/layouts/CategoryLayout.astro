---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseHead from "../components/Common/BaseHead.astro";
import Header from "../components/Common/Header.astro";
import Pagination from "../components/Pagination/Pagination.astro";
import Footer from "../components/Common/Footer.astro";
import Search from "../components/Search/Search.astro";
import ProjectListing from "../components/Projects/ProjectListing.astro";
import CategoryList from "../components/Categories/CategoryList.astro";
import CategoryDropdown from "../components/Categories/CategoryDropdown";

const { categoryData, page, slug } = Astro.props;
type Project = CollectionEntry<"projects">;
const categories = await getCollection("categories");
---

<html lang="en">
  <head>
    <BaseHead
      title={"Windows on ARM"}
      description={"Find projects ready for Windows on ARM"}
    />
  </head>
  <body>
    <Header />
    <main class="max-w-6xl mx-auto px-5 w-full">
      <Search />
      <section class="h-12 w-auto">
        <CategoryDropdown
          categories={categories}
          slug={slug}
          client:only="solid"
        />
      </section>
      <section class="flex flex-col items-center sm:pb-10 pt-0 min-h-60">
        <ul class="grid grid-cols-1 lg:grid-cols-2 w-full">
          {page.data.map((project: Project) => <ProjectListing {...project} />)}
        </ul>
        <Pagination
          length={page.lastPage}
          baseUrl={`/${slug}`}
          currentUrl={page.url.current}
          currentPage={page.currentPage}
          prevUrl={page.url.prev}
          nextUrl={page.url.next}
          lastUrl={`/${slug}/${page.lastPage}`}
        />
      </section>
    </main>
    <Footer />
  </body>
</html>
