---
import { getEntry, type CollectionEntry } from "astro:content";
import BaseHead from "../components/Common/BaseHead.astro";
import Header from "../components/Common/Header.astro";
import Footer from "../components/Common/Footer.astro";
import { toTitleCase } from "../util/formatting";
import Search from "../components/Search/Search.astro";
import ProjectDetails from "../components/Projects/ProjectDetails.astro";
import Breadcrumbs from "../components/Common/Breadcrumbs.astro";
import CategoryList from "../components/Categories/CategoryList.astro";

type Props = CollectionEntry<"projects">;

const { data, slug, render } = Astro.props;

const { Content } = await render();

// extract generic fields
const textFields = Object.entries(data).filter(
  ([key]) =>
    key !== "icon" && key !== "name" && key !== "categories" && key !== "link"
) as [string, string][];

// extract special fields
const { link, icon, name, categories } = data;

// get category data from references
const categoryPromises = categories.map(async (category) =>
  getEntry("categories", category.slug)
);
const categoriesData = await Promise.all(categoryPromises);

// construct field array
const fields = [
  ...textFields.map((field) => ({
    key: field[0],
    value: field[1],
    type: "text",
  })),
  {
    key: "link",
    value: link,
    type: "link",
  },
  {
    key: "categories",
    value: categoriesData,
    type: "array",
  },
];

export type ProjectFields = typeof fields;

// sort fields
const sortOrder = ["support", "categories", "versionFrom", "link", "notes"];

const sortKeys = sortOrder.reduce((obj: any, item: string, index: number) => {
  return {
    ...obj,
    [item]: index,
  };
}, {});

fields.sort((a, b) => sortKeys[a.key] - sortKeys[b.key]);

// list filtering fields
const filters = ["categories", "support"];
---

<html lang="en">
  <head>
    <BaseHead
      title={name}
      description={`Windows on ARM compatibility details for ${name}`}
    />
  </head>

  <body class="min-h-screen flex flex-col">
    <Header />
    <main data-pagefind-body class="container mx-auto">
      <section class="flex flex-col items-center p-1 sm:pb-10 md:px-20 pt-0">
        <h1 class="font-bold text-3xl px-0 self-start">{name}</h1>
        <ProjectDetails
          fields={fields}
          icon={icon}
          categoriesData={categoriesData}
          filters={filters}
          Content={Content}
        />
      </section>
      <Search />
      <CategoryList categories={categories} />
    </main>
    <Footer />
  </body>
</html>
