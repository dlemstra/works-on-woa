---
import { CollectionEntry, getCollection } from "astro:content";
import type { PaginateFunction } from "astro";
import CategoryLayout from "../../layouts/CategoryLayout.astro";

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const categoriesData = await getCollection("categories");
  const categories = [
    ...categoriesData.map((category) => category.slug),
    "all",
  ];
  const projects = await getCollection("projects");
  // return paginate(projects, { pageSize: 25 });

  return categories.map((c) => {
    const pageData = projects.filter((p) => {
      const cats = p.data.categories ?? [];
      return (
        c === "all" ||
        cats
          .map((cat) => cat.slug)
          .includes(c as CollectionEntry<"categories">["slug"])
      );
    });
    return paginate(pageData, {
      params: { category: c.toLowerCase() },
      pageSize: 24,
      props: {
        categoryData: categoriesData.find((cat) => cat.slug === c)?.data,
      },
    });
  });
}
const { category } = Astro.params;
const { page, categoryData } = Astro.props;
---

<CategoryLayout page={page} slug={category} categoryData={categoryData} />
